@page "/"
@page "/account"

@using DevTest.Blazor.DataAccess;
@using DevTest.Blazor.Utilities.Utilities;
@using Microsoft.AspNetCore.Components.Forms
@inject ILocalStorage LocalStorage
@inject IJSRuntime JsRuntime
@using Refit;

<PageTitle>Developer Profile</PageTitle>


@code {
	[CascadingParameter]
	public MainLayout mainLayout { get; set; }
	public Models.ProfileModel? profileModel {get;set;}

	protected override async Task OnInitializedAsync() {
		await base.OnInitializedAsync();
		}

	private async Task HandleSubmit(EditContext editContext) {
		try {
			var authToken = await LocalStorage.GetStringAsync("token");

			var api = RestService.For<IDevReg>("https://api.devreg.org/api/v1", new RefitSettings() {
					AuthorizationHeaderValueGetter = () =>
						Task.FromResult(authToken)
					});

			profileModel = await api.PutProfile(profileModel);

			if(profileModel != null) {
				await JsRuntime.InvokeVoidAsync("alert", "Profile Updated");
				}
			}
		catch (Exception ex) {

			await JsRuntime.InvokeVoidAsync("alert", ex.Message);
			}
		}	
}

@if (mainLayout.GetUser() != null)
{
	profileModel = mainLayout.GetUser();
	<h3 class="my-4">Your Account</h3>

	<EditForm Model="@profileModel" class="form" OnSubmit="@HandleSubmit">
		<div class="form-group">
			<InputText id="FirstName" @bind-Value="profileModel.FirstName" />
		</div>
		<div class="form-group">
			<InputText id="lastName" @bind-Value="profileModel.lastName" />
		</div>
		<div class="form-group">
			<InputText id="email" @bind-Value="profileModel.email" />
		</div>
		<div class="form-group">
			<button type="submit" class="btn btn-primary">Update</button>
			<button type="button" class="btn btn-danger" @onclick="mainLayout.Logout">Logout</button>
		</div>
	</EditForm>
}
else
{
	<h3 class="my-4">Please Login</h3>

	<button type="button" class="btn btn-success" @onclick="mainLayout.OpenLogin">Login</button>
}

